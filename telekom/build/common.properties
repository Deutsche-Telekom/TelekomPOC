
# ---------------------------------------------------------------------------------
# Dynamo enviroment properties.  Recommended that you set DYNAMO_HOME AND DAS_ROOT
# as environment properties for your OS.  Or you can set things here...
#
dynamo.home=/atgcommerce/ATG/ATG11.0
dynamo.root.dir=${dynamo.home}/..
weblogic.server.dir=/atgcommerce/Oracle/Middleware/Oracle_Home/wlserver

#jboss.template.server.dir=${jboss.server.dir}/default/

# ---------------------------------------------------------------------------------
# This sets the order in which submodules are called when calling a main task 
# such as 'all', 'build', etc...  Note the reverse must also be declared to support
# such tasks as sql drops and creates.
# 
modules.build.order=common/build.xml,storefront/build.xml,publishing/build.xml
#used later#env/dev/build.xml,env/dev-ca/build.xml,env/qa/build.xml,env/qa-ca/build.xml,env/qa-stage/build.xml,env/perf/build.xml,env/perf-ca/build.xml,env/prod/build.xml,env/prod-ca/build.xml,env/prod-stage/build.xml
reverse.build.order=publishing/build.xml,storefront/build.xml,common/build.xml
ca.build.file=

# ---------------------------------------------------------------------------------
# Default database properties.  These are for use by engineers who are running
# their own database schemas or responsible for environment databases.  
# These are used by the createtables, droptables, and inittables tasks
#
database.type=oracle

# ATG Schemas for Commerce
jdbc.cataloga.user=atgcatalogA
jdbc.cataloga.password=atgcatalogA
jdbc.catalogb.user=atgcatalogB
jdbc.catalogb.password=atgcatalogB
jdbc.core.user=atgprod
jdbc.core.password=atgprod

# CA schemas
jdbc.pub.user=atgpub
jdbc.pub.password=atgpub

# this is used for filtering script folders
jdbc.url=jdbc:oracle:thin:@10.33.137.235:1521:ATGDB

# this is the SID if you are on oracle don't let the term jdbc.hostname fool you
#
jdbc.hostname=ATGDB
#
default.install.unit=TWODEGREE
# ---------------------------------------------------------------------------------
# Location of any server specific configuration that should be deployed
#
global.server.dir=../../servers

jar.classes=true
jar.configs=false

# ---------------------------------------------------------------------------------
# This is the directory the ANT task menu will used to write the javadocs
# for all defined submodules 
# 
# This should be overridden to match your local environment needs.
#
global.javadoc.dir=../../documents/javadocs

# Javadoc external references
#
jdk.docs.dir=${jdk.home}/docs/api
dynamo.docs.dir=${dynamo.root.dir}/manuals/dynamo/apidoc

# jalopy.home is the directory where your jalopy libraries are stored
#
jalopy.home=${env.JALOPY_HOME}
jalopy.rules.dir=${global.etc.dir}/jalopy


# ---------------------------------------------------------------------------------
# Executables
#
# Sqlplus.  Why sqlplus instead of ANT's sql task?  Well for one sqlplus doesn't
# barf when it has to run a ddl file which mixes both stored procedures and table 
# creation.  The other reason is this allows the project to use sql statements
# fit for DBAs.
#
# For windows consider sqlplusw if you are having issues with sql statements that 
# relate to I18N
#
# sqlplus.win.cmd=sqlplusw
sqlplus.win.cmd=sqlplus
sqlplus.unix.cmd=sqlplus
exp.win.cmd=exp
exp.unix.cmd=exp

# ATG's Darina command to create J2EE applications
#
rundarina.win.cmd=${dynamo.home}/bin/runDarina.bat
rundarina.unix.cmd=${dynamo.home}/bin/runDarina


# ********************************************************************************
# ********************************************************************************
#
# Common values used by sub modules
#
# ********************************************************************************
# ********************************************************************************


# ---------------------------------------------------------------------------------
# Basic directory settings that identify common directory structures in each
# submodule
#
src.dir=${basedir}/src
#etc.dir=${basedir}/etc
config.dir=${basedir}/config
#liveconfig.dir=${basedir}/liveconfig
inf.dir=${basedir}/META-INF
lib.dir=${basedir}/lib
#sql.dir=${basedir}/sql
j2ee.dir=${basedir}/j2ee-apps
#test.dir=${basedir}/test
#test.lib.dir=${test.dir}/lib
#test.src.dir=${test.dir}/src

# ---------------------------------------------------------------------------------
# Basic directory settings that identify the build directory structures for each
# submodule
#
build.dir=${basedir}/build
#build.tempconfig.dir=${build.dir}/tempconfig
build.config.dir=${build.dir}/config
build.j2ee.dir=${build.dir}/j2ee-apps
javadoc.dir=${build.dir}/javadoc
classes.dir=${build.dir}/classes
#testclasses.dir=${build.dir}/testclasses
#reports.dir=${build.dir}/reports
ear.dir=${build.dir}/ear
javadoc.dir=${build.dir}/javadoc


# ********************************************************************************
# ********************************************************************************
#
# Other Tools and Features
#
# ********************************************************************************
# ********************************************************************************

# ---------------------------------------------------------------------------------
# global.preemptive.backup (default true), when set will export data from and  
# checks in to the SVN repository
#global.preemptive.backup=true
#global.svn.data.url=https://svn.prod.cricketcommunications.com/svn/mycricket_replatform/data
#global.data.dir=${basedir}/data
#global.dbbackup.dir=${global.data.dir}/dbbackup

# prompt for seed value to be used with order id space
#global.prompt.order.seed=true
#store.idspacesxml.path=/atg/dynamo/service/idspaces.xml

# ---------------------------------------------------------------------------------
# J2EE Build and deployment settings
#

# Define here which deployment definitions to use for the deploy task
# these are:
#
# deploy-das.xml:      This definition supplies deploy tasks for J2EE deployment on DAS
# deploy-jboss.xml:    This definition supplies deploy tasks for J2EE deployment on JBoss
# deploy-weblogic.xml: This definition supplies deploy tasks for J2EE deploymet on Weblogic
#
default.deploy.definition.file=weblogic.xml


# Tells the deploy steps to strip J2EE whitespace as a predeployment task
#
strip.j2ee.whitespace=false

# Uncommenting this tells the deploy steps to precompile the JSPs.  
# Commented out here because most development tasks won't want this.  
# This is useful only when creating a build for release.
# 
# darina.precompile.arg=-jsp-compile


# ---------------------------------------------------------------------------------
# Additional J2EE build and deployment settings when using another application
# server (other than DAS)
#

# this is used for the development deployment step "ANT devdeploy" and indentifies
# where the devdeploy task should copy the .ear file
# The default will be to put it in $DYNAMO_HOME, override in username.properties.
#
#application.ear.install.dir=${weblogic.server.dir}


ears.to.assemble=ear.store
express.ears.to.assemble=ear.production
install.ca.data=false

ear.store.filename=atg_production.ear
ear.store.destination=${weblogic.server.dir}
ear.store.modules=DAS DPS DSS DCS DafEar DCS.PublishingAgent PublishingAgent DafEar.Admin DAS AF.Endeca.Index DCS.Endeca.Index Store.Endeca.Index DAF.Endeca.Assembler twodegree.storefront
ear.store.server=dev-weblogic
ear.store.liveconfig=true
ear.store.standalone=false
ear.store.pack=false
ear.store.ds.filename=

#----------------------------------------------------------------------------------
# assemble ear with layer staging option for stage workflow
#
ear.todeploy.layer-staging=false

#atg.ca.env=dev
atg.production.agent1=localhost:8060
